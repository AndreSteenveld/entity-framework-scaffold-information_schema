// <auto-generated />
using System;
using InformationSchema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InformationSchema.Postgres.Migrations
{
    [DbContext(typeof(EntertainmentContext))]
    [Migration("20210121155012_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("InformationSchema.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("InformationSchema.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ActorId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ProductionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("ProductionId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("InformationSchema.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("Release")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Productions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Production");
                });

            modelBuilder.Entity("InformationSchema.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ProductionId")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("InformationSchema.Movie", b =>
                {
                    b.HasBaseType("InformationSchema.Production");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("integer");

                    b.Property<double>("WorldwideBoxOfficeGross")
                        .HasColumnType("double precision");

                    b.HasDiscriminator().HasValue("Movie");
                });

            modelBuilder.Entity("InformationSchema.Series", b =>
                {
                    b.HasBaseType("InformationSchema.Production");

                    b.Property<int>("NumberOfEpisodes")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("Series");
                });

            modelBuilder.Entity("InformationSchema.Character", b =>
                {
                    b.HasOne("InformationSchema.Actor", "Actor")
                        .WithMany("Characters")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InformationSchema.Production", "Production")
                        .WithMany("Characters")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("InformationSchema.Rating", b =>
                {
                    b.HasOne("InformationSchema.Production", "Production")
                        .WithMany("Ratings")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");
                });

            modelBuilder.Entity("InformationSchema.Actor", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("InformationSchema.Production", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
